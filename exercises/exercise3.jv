
pipeline WDRStatsPipeline {

  // Define pipeline flow for bond issuance data
  WDRDataExtractor
    -> WDRXlsxProcessor
    -> SheetSelector
    -> RangeSelector
    -> BondColumnCleaner
    -> BondTableProcessor
    -> BondDataSaver;

  // Define parallel flow for GDP per Capita data
  RangeSelector
    -> GdpColumnCleaner
    -> GdpTableProcessor
    -> GdpDataSaver;

  // Step 1: Extract data from the specified Excel file URL
  block WDRDataExtractor oftype HttpExtractor {
    url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
  }

  // Step 2: Process the file as an Excel workbook
  block WDRXlsxProcessor oftype XLSXInterpreter { }

  // Step 3: Select the specific sheet for processing
  block SheetSelector oftype SheetPicker {
    sheetName: "Figure S5.1.2";
  }

  // Step 4: Extract the required data range (P3:S45)
  block RangeSelector oftype CellRangeSelector {
    select: range P3:S45;
  }

  // Step 5: Clean Bond Issuance columns by removing unnecessary ones
  block BondColumnCleaner oftype ColumnDeleter {
    delete: [column B, column C];
  }

  // Step 6: Clean GDP per Capita columns by removing unnecessary ones
  block GdpColumnCleaner oftype ColumnDeleter {
    delete: [column B, column D];
  }

  // Step 7: Process Bond Issuance data into a structured table
  block BondTableProcessor oftype TableInterpreter {
    header: false;
    columns: [
      "Country Code" oftype CountryCodeAlpha3,
      "Bond Issuance Share" oftype ValidBondType
    ];
  }

  // Step 8: Process GDP per Capita data into a structured table
  block GdpTableProcessor oftype TableInterpreter {
    header: false;
    columns: [
      "Country Code" oftype CountryCodeAlpha3,
      "GDP per Capita" oftype ValidGdpType
    ];
  }

  // Step 9: Save Bond Issuance data into SQLite
  block BondDataSaver oftype SQLiteLoader {
    table: "bondIssuance";
    file: "./country-stats.sqlite";
  }

  // Step 10: Save GDP per Capita data into SQLite
  block GdpDataSaver oftype SQLiteLoader {
    table: "gdpPerCapita";
    file: "./country-stats.sqlite";
  }

  // Define value types and validation rules
  valuetype ValidGdpType oftype decimal {
    constraints: [PositiveGdpConstraint];
  }

  // Validation rule: GDP per Capita must be a positive decimal
  constraint PositiveGdpConstraint on decimal: value > 0;

  valuetype ValidBondType oftype decimal {
    constraints: [BondRangeConstraint];
  }

  // Validation rule: Bond Issuance Share must be in range 0â€“1 inclusive
  constraint BondRangeConstraint oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: true;
    upperBound: 1;
    upperBoundInclusive: true;
  }
}
